#!/usr/bin/env php
<?php

if (\file_exists(__DIR__ . '/../../../autoload.php')) {
    require __DIR__ . '/../../../autoload.php';
} elseif (\file_exists(__DIR__ . '/../../autoload.php')) {
    require __DIR__ . '/../../autoload.php';
} else {
    require __DIR__ . '/../vendor/autoload.php';
}

use NeoFramework\Core\Commands\Build;
use NeoFramework\Core\Commands\Migrate;
use NeoFramework\Core\Commands\Queue\Clear;
use NeoFramework\Core\Commands\Queue\Show;
use NeoFramework\Core\Commands\Queue\Work;
use NeoFramework\Core\Functions;

if (PHP_VERSION_ID < 80000) {
    echo "NeoFramework requires PHP8.0 or newer\n";

    exit(1);
}

$logo = "
=============================================================================================
  _   _             __                                             _       _____ _      _____ 
 | \ | |           / _|                                           | |     / ____| |    |_   _|
 |  \| | ___  ___ | |_ _ __ __ _ _ __ ___   _____      _____  _ __| | __ | |    | |      | |  
 | . ` |/ _ \/ _ \|  _| '__/ _` | '_ ` _ \ / _ \ \ /\ / / _ \| '__| |/ / | |    | |      | |  
 | |\  |  __/ (_) | | | | | (_| | | | | | |  __/\ V  V / (_) | |  |   <  | |____| |____ _| |_ 
 |_| \_|\___|\___/|_| |_|  \__,_|_| |_| |_|\___| \_/\_/ \___/|_|  |_|\_\  \_____|______|_____|  
                                            
==============================================================================================
";

$app = new Ahc\Cli\Application(
    'NeoFramework CLI',
    '1.0'
);

$app->add(new Migrate, 'mig');
$app->add(new Build, 'bu');
$app->add(new Work, 'qw');
$app->add(new Show,"qs");
$app->add(new Clear,"qc");

$class = [];
$folder = Functions::getRoot() . "App/Commands";
if (is_dir($folder)) {
    $files = scandir($folder);
    foreach ($files as $file) {
        if (str_contains($file, '.php'))
            $class[] = "App\Commands\\" . str_replace(".php","",$file);
    }

    if (!empty($class)) {
        foreach ($class as $command) {
            if (is_subclass_of($command,"Ahc\Cli\Input\Command")) {
                $app->add(new $command,defined($command."::ALIAS")?$command::ALIAS:"");
            }
        }
    }
}


$app->logo($logo)->handle($_SERVER['argv']);
